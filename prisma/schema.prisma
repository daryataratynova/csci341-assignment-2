// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model DiseaseType {
  id        Int   @id @default(autoincrement())
  description String @db.VarChar(140)

  diseases Disease[]
  specialize Specialize[]
}

model Country {
  cname String @id @db.VarChar(50)
  population BigInt

  discover Discover[]
  users Users[]
  record Record[]
}

model Disease{
  disease_code String @id @db.VarChar(50)
  pathogen String @db.VarChar(20)
  description String @db.VarChar(140)
  id        Int    

  record Record[]
  diseaseType DiseaseType @relation(fields: [id], references: [id], onDelete: Cascade)
  disease Discover[]
}

model Discover{
  cname String @db.VarChar(50)
  disease_code String  @db.VarChar(50)
  first_enc_date DateTime @db.Date

  @@id([cname, disease_code])
  disease Disease @relation(fields: [disease_code], references: [disease_code], onDelete: Cascade)
  country Country @relation(fields: [cname], references: [cname], onDelete: Cascade)
}

model Users{
  email String @id @db.VarChar(60)
  name String @db.VarChar(30)
  surname String @db.VarChar (40)
  salary Int
  phone String @db.VarChar(20)
  cname String @db.VarChar(50)

  publicServant PublicServant?
  doctor Doctor?
  country Country @relation(fields: [cname], references: [cname], onDelete: Cascade)
}

model PublicServant{
  email String @id @db.VarChar(60)
  department String @db.VarChar(50)

  record Record[]
  users Users @relation(fields: [email], references: [email], onDelete: Cascade)
}

model Doctor{
  email String @id @db.VarChar(60)
  degree String @db.VarChar(20)

  specialize Specialize[]

  users Users @relation(fields: [email], references: [email], onDelete: Cascade)
}

model Specialize{
  id Int 
  email String @db.VarChar(50)

  @@id([id, email])

  diseaseType DiseaseType @relation(fields:[id], references: [id], onDelete: Cascade)
  doctor Doctor @relation(fields: [email], references: [email], onDelete: Cascade)
}

model Record{
  email String @db.VarChar(60)
  cname String @db.VarChar(50)
  disease_code String @db.VarChar(50)
  total_deaths Int
  total_patients Int

  @@id([email,cname,disease_code])
  disease Disease @relation(fields: [disease_code], references: [disease_code], onDelete: Cascade)
  country Country @relation(fields: [cname], references: [cname], onDelete: Cascade)
  publicServant PublicServant @relation(fields: [email], references: [email], onDelete: Cascade)
}